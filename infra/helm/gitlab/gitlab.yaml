certmanager:
  install: false
  installCRDs: true
  nameOverride: certmanager
  rbac:
    create: true
certmanager-issuer:
  common:
    labels: {}
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      gitlab: {}
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      tls: {}
    image: {}
    ingress:
      annotations: {}
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      password: {}
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  rbac:
    create: true
  resources:
    requests:
      cpu: 50m
  server: https://acme-v02.api.letsencrypt.org/directory
gitlab:
  geo-logcursor:
    affinity: {}
    common:
      labels: {}
    deployment:
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 30
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      strategy: {}
    enabled: true
    gitaly:
      authToken: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        nodeName: null
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    minio:
      port: 9000
      serviceName: minio-svc
    nodeSelector: {}
    podLabels: {}
    psql: {}
    redis:
      password: {}
    replicaCount: 1
    resources:
      requests:
        cpu: 300m
        memory: 700M
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    tolerations: []
  gitaly:
    annotations: {}
    common:
      labels: {}
    git: {}
    gitaly: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        hooks: {}
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/gitaly
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    internal: {}
    logging:
      format: json
    maxUnavailable: 1
    metrics:
      enabled: true
      metricsPort: 9236
    persistence:
      accessMode: ReadWriteOnce
      annotations: {}
      enabled: true
      matchExpressions: []
      matchLabels: {}
      size: 50Gi
      subPath: ""
    podLabels: {}
    prometheus: {}
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
    ruby: {}
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    service:
      tls: {}
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    shell:
      authToken: {}
      concurrency: []
    statefulset:
      strategy: {}
    tolerations: []
    workhorse: {}
  gitlab-exporter:
    common:
      labels: {}
    deployment:
      strategy: {}
    enabled: true
    extraEnv:
      MALLOC_CONF: dirty_decay_ms:0,muzzy_decay_ms:0
      RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO: 0.111
      RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO: 0.055
      RUBY_GC_HEAP_INIT_SLOTS: 80000
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    local:
      psql:
        main:
          Release:
            IsInstall: false
            IsUpgrade: true
            Name: gitlab
            Namespace: gitlab
            Revision: 3
            Service: Helm
          Schema: main
          Values:
            global:
              psql:
                password: {}
            psql: {}
    metrics:
      annotations:
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "9168"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9168"
        prometheus.io/scrape: "true"
      enabled: true
      port: 9168
    podLabels: {}
    psql: {}
    redis:
      password: {}
    resources:
      requests:
        cpu: 75m
        memory: 100M
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    service:
      externalPort: 9168
      internalPort: 9168
      name: gitlab-exporter
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    tolerations: []
  gitlab-grafana:
    common:
      labels: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    ingress:
      annotations: {}
      proxyBodySize: "0"
      proxyConnectTimeout: 15
      proxyReadTimeout: 180
      tls: {}
  gitlab-pages:
    annotations: {}
    artifactsServerTimeout: 10
    artifactsServerUrl: null
    cluster: true
    common:
      labels: {}
    deployment:
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      strategy: {}
    domainConfigSource: gitlab
    extraEnv: {}
    gitlabClientHttpTimeout: null
    gitlabClientJwtExpiry: null
    gitlabServer: null
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        defaultTheme: null
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableImpersonation: null
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        issueClosingPattern: null
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        maxRequestDurationSeconds: null
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
        webhookTimeout: null
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        nodeName: null
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        externalIP: null
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        ssh: null
        tls: {}
      image: {}
      ingress:
        annotations: {}
        apiVersion: null
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        host: null
        https: null
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
        path: null
        port: null
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        connectTimeout: null
        keepalives: null
        keepalivesCount: null
        keepalivesIdle: null
        keepalivesInterval: null
        knownDecompositions:
        - main
        - ci
        password: {}
        tcpUserTimeout: null
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    headers: []
    hpa:
      customMetrics: []
      maxReplicas: 10
      minReplicas: 1
      targetAverageValue: 100m
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-pages
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      path: null
      tls: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    insecureCiphers: false
    internalGitlabServer: null
    logFormat: json
    logVerbose: false
    maxConnections: null
    maxUnavailable: 1
    metrics:
      annotations: {}
      enabled: true
      port: 9235
    networkpolicy:
      annotations: {}
      egress:
        enabled: false
        rules: []
      enabled: false
      ingress:
        enabled: false
        rules: []
    podLabels: {}
    priorityClassName: ""
    queueSelector: false
    redirectHttp: false
    resources:
      requests:
        cpu: 900m
        memory: 2G
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    sentry:
      dsn: null
      enabled: false
      environment: null
    service:
      customDomains:
        internalHttpsPort: 8091
        nodePort: {}
        type: LoadBalancer
      externalPort: 8090
      internalPort: 8090
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    statusUri: /-/readiness
    tls:
      maxVersion: null
      minVersion: null
    tolerations: []
    useHttp2: true
    useProxyV2: false
    workhorse: {}
  gitlab-runner:
    enabled: false
  gitlab-shell:
    annotations: {}
    common:
      labels: {}
    config:
      clientAliveInterval: 0
      loginGraceTime: 120
      maxStartups:
        full: 100
        rate: 30
        start: 10
    deployment:
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      readinessProbe:
        failureThreshold: 2
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      strategy: {}
    enabled: true
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    hpa:
      targetAverageValue: 100m
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    logging:
      format: text
      sshdLogLevel: ERROR
    maxReplicas: 10
    maxUnavailable: 1
    metrics:
      annotations:
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "9122"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9122"
        prometheus.io/scrape: "true"
      enabled: false
      port: 9122
    minReplicas: 2
    networkpolicy:
      annotations: {}
      egress:
        enabled: false
        rules: []
      enabled: false
      ingress:
        enabled: false
        rules: []
    podLabels: {}
    resources:
      requests:
        cpu: 0
        memory: 6M
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    service:
      externalTrafficPolicy: Cluster
      internalPort: 2222
      name: gitlab-shell
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    sshDaemon: openssh
    tolerations: []
    workhorse: {}
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      defaultTheme: null
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableImpersonation: null
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      issueClosingPattern: null
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      maxRequestDurationSeconds: null
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
      webhookTimeout: null
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    communityImages:
      migrations:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
      sidekiq:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
      toolbox:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
      webservice:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
      workhorse:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    enterpriseImages:
      geo-logcursor:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
      migrations:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
      sidekiq:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
      toolbox:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
      webservice:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
      workhorse:
        repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
    extraEnv: {}
    geo:
      enabled: false
      nodeName: null
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      externalIP: null
      gitlab: {}
      hostSuffix: null
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      ssh: null
      tls: {}
    image: {}
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      host: null
      https: null
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
      path: null
      port: null
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      connectTimeout: null
      keepalives: null
      keepalivesCount: null
      keepalivesIdle: null
      keepalivesInterval: null
      knownDecompositions:
      - main
      - ci
      password: {}
      tcpUserTimeout: null
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  kas:
    annotations: {}
    common:
      labels: {}
    customConfig: {}
    deployment:
      strategy: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    hpa:
      targetAverageValue: 100m
    image:
      repository: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/kas
    ingress:
      agentPath: /
      annotations: {}
      k8sApiPath: /k8s-proxy
      tls: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    maxReplicas: 10
    maxUnavailable: 1
    metrics:
      enabled: true
      path: /metrics
      port: 8151
    minReplicas: 2
    networkpolicy:
      annotations: {}
      egress:
        enabled: false
        rules: []
      enabled: false
      ingress:
        enabled: false
        rules: []
    podLabels: {}
    privateApi: {}
    redis:
      enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 100M
    securityContext:
      fsGroup: 65532
      runAsGroup: 65532
      runAsUser: 65532
    service:
      apiInternalPort: 8153
      externalPort: 8150
      internalPort: 8150
      kubernetesApiPort: 8154
      privateApiPort: 8155
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    tolerations: []
    workhorse: {}
  mailroom:
    common:
      labels: {}
    deployment:
      strategy: {}
    enabled: true
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    hpa:
      cpu:
        targetAverageUtilization: 75
      customMetrics: []
      maxReplicas: 2
      minReplicas: 1
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-mailroom
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    networkpolicy:
      annotations: {}
      egress:
        enabled: false
        rules: []
      enabled: false
      ingress:
        enabled: false
        rules: []
    podLabels: {}
    redis:
      password: {}
    resources:
      requests:
        cpu: 50m
        memory: 150M
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    tolerations: []
  migrations:
    activeDeadlineSeconds: 3600
    annotations: {}
    backoffLimit: 6
    common:
      labels: {}
    enabled: true
    gitaly:
      authToken: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    initialRootPassword: {}
    local:
      psql:
        main:
          Release:
            IsInstall: false
            IsUpgrade: true
            Name: gitlab
            Namespace: gitlab
            Revision: 3
            Service: Helm
          Schema: main
          Values:
            global:
              psql:
                password: {}
            psql: {}
    podLabels: {}
    psql: {}
    redis:
      password: {}
    resources:
      requests:
        cpu: 250m
        memory: 200Mi
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    tolerations: []
  operator:
    common:
      labels: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image:
      pullSecrets: []
      repository: registry.gitlab.com/gitlab-org/charts/components/gitlab-operator
    init:
      resources:
        requests:
          cpu: 50m
    podLabels: {}
    resources:
      requests:
        cpu: 100m
        memory: 64M
    tolerations: []
    version: "0.11"
  praefect:
    common:
      labels: {}
    electionStrategy: sql
    failover:
      enabled: true
      readonlyAfter: true
    gitaly:
      service:
        tls: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        defaultTheme: null
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableImpersonation: null
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        issueClosingPattern: null
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        maxRequestDurationSeconds: null
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
        webhookTimeout: null
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        nodeName: null
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        externalIP: null
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        ssh: null
        tls: {}
      image: {}
      ingress:
        annotations: {}
        apiVersion: null
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        host: null
        https: null
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
        path: null
        port: null
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        connectTimeout: null
        keepalives: null
        keepalivesCount: null
        keepalivesIdle: null
        keepalivesInterval: null
        knownDecompositions:
        - main
        - ci
        password: {}
        tcpUserTimeout: null
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/gitaly
    init:
      image: {}
      resources: {}
    maxUnavailable: 1
    metrics:
      enabled: true
      port: 9236
    podLabels: {}
    replicas: 2
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    service:
      tls: {}
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    statefulset:
      strategy: {}
    tolerations: []
  sidekiq:
    annotations: {}
    common:
      labels: {}
    concurrency: 25
    deployment:
      strategy: {}
      terminationGracePeriodSeconds: 30
    enabled: true
    extra: {}
    extraEnv: {}
    gitaly:
      authToken: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    hpa:
      targetAverageValue: 350m
    image: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 20
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 30
    local:
      psql:
        main:
          Release:
            IsInstall: false
            IsUpgrade: true
            Name: gitlab
            Namespace: gitlab
            Revision: 3
            Service: Helm
          Schema: main
          Values:
            global:
              psql:
                password: {}
            psql: {}
    logging:
      format: default
    maxReplicas: 10
    maxUnavailable: 1
    memoryKiller:
      checkInterval: 3
      daemonMode: true
      graceTime: 900
      maxRss: 2000000
      shutdownWait: 30
    metrics:
      annotations:
        gitlab.com/prometheus_port: "3807"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/port: "3807"
        prometheus.io/scrape: "true"
      enabled: true
      port: 3807
    minReplicas: 1
    minio:
      port: 9000
      serviceName: minio-svc
    networkpolicy:
      annotations: {}
      egress:
        enabled: false
        rules: []
      enabled: false
      ingress:
        enabled: false
        rules: []
    podLabels: {}
    pods:
    - common:
        labels: {}
      name: all-in-1
      podLabels: {}
    priorityClassName: ""
    psql: {}
    queueSelector: false
    rack_attack:
      git_basic_auth:
        enabled: false
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 0
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 2
    redis:
      password: {}
    registry:
      api:
        port: 5000
        protocol: http
        serviceName: registry
      enabled: true
      tokenIssuer: gitlab-issuer
    resources:
      requests:
        cpu: 900m
        memory: 2G
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    timeout: 25
    tolerations: []
    trusted_proxies: []
  toolbox:
    annotations: {}
    antiAffinityLabels:
      matchLabels:
        app: gitaly
    backups:
      cron:
        concurrencyPolicy: Replace
        enabled: false
        extraArgs: ""
        failedJobsHistoryLimit: 1
        persistence:
          accessMode: ReadWriteOnce
          enabled: false
          matchExpressions: []
          matchLabels: {}
          size: 10Gi
          subPath: ""
        resources:
          requests:
            cpu: 50m
            memory: 350M
        schedule: 0 1 * * *
        successfulJobsHistoryLimit: 3
      objectStorage:
        backend: s3
        config: {}
    common:
      labels: {}
    deployment:
      strategy:
        type: Recreate
    enabled: true
    extra: {}
    extraEnv: {}
    gitaly:
      authToken: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    image: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    local:
      psql:
        main:
          Release:
            IsInstall: false
            IsUpgrade: true
            Name: gitlab
            Namespace: gitlab
            Revision: 3
            Service: Helm
          Schema: main
          Values:
            global:
              psql:
                password: {}
            psql: {}
    minio:
      bucket: git-lfs
      port: 9000
      serviceName: minio-svc
    persistence:
      accessMode: ReadWriteOnce
      enabled: false
      matchExpressions: []
      matchLabels: {}
      size: 10Gi
      subPath: ""
    podLabels: {}
    psql: {}
    rack_attack:
      git_basic_auth:
        enabled: false
    redis:
      password: {}
    registry:
      api:
        port: 5000
        protocol: http
        serviceName: registry
      tokenIssuer: gitlab-issuer
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 350M
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    tolerations: []
    trusted_proxies: []
  webservice:
    annotations: {}
    common:
      labels: {}
    deployment:
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 30
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      strategy: {}
    deployments:
      default:
        common:
          labels: {}
        deployment:
          annotations: null
          labels: null
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          strategy: {}
        extraEnv: {}
        fullname: gitlab-webservice
        hpa:
          maxReplicas: 10
          minReplicas: 2
          targetAverageValue: 1
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/service-upstream: "true"
          path: /
          pathType: Prefix
          proxyBodySize: 512m
          proxyConnectTimeout: 15
          proxyReadTimeout: 600
        name: default
        nodeSelector: null
        pdb:
          maxUnavailable: 1
        pod:
          annotations: null
          labels: null
        puma:
          disableWorkerKiller: false
          threads:
            max: 4
            min: 4
          workerMaxMemory: 1024
        resources:
          requests:
            cpu: 300m
            memory: 2.5G
        service:
          annotations: null
          labels: null
          type: ClusterIP
        sharedTmpDir: {}
        sharedUploadDir: {}
        shutdown:
          blackoutSeconds: 10
        sshHostKeys:
          mount: false
          mountName: ssh-host-keys
          types:
          - dsa
          - rsa
          - ecdsa
          - ed25519
        tolerations: null
        workerProcesses: 2
        workhorse:
          extraArgs: ""
          imageScaler:
            maxFileSizeBytes: 250000
            maxProcs: 2
          keywatcher: true
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          logFormat: json
          monitoring:
            exporter:
              enabled: false
              port: 9229
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 100m
              memory: 100M
          sentryDSN: ""
    enabled: true
    extra: {}
    extraEnv: {}
    gitaly:
      authToken: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      communityImages:
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      enterpriseImages:
        geo-logcursor:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-geo-logcursor
        migrations:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        sidekiq:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee
        toolbox:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
        webservice:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee
        workhorse:
          repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee
      extraEnv: {}
      geo:
        enabled: false
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        tls: {}
      image: {}
      ingress:
        annotations: {}
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        knownDecompositions:
        - main
        - ci
        password: {}
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    helmTests:
      enabled: true
    hpa:
      targetAverageValue: 1
    image: {}
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/service-upstream: "true"
      proxyBodySize: 512m
      proxyConnectTimeout: 15
      proxyReadTimeout: 600
      requireBasePath: true
      tls: {}
    init:
      image: {}
      resources:
        requests:
          cpu: 50m
    local:
      psql:
        main:
          Release:
            IsInstall: false
            IsUpgrade: true
            Name: gitlab
            Namespace: gitlab
            Revision: 3
            Service: Helm
          Schema: main
          Values:
            global:
              psql:
                password: {}
            psql: {}
    maxReplicas: 10
    maxUnavailable: 1
    metrics:
      annotations:
        gitlab.com/prometheus_path: /-/metrics
        gitlab.com/prometheus_port: "8080"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /-/metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      enabled: true
    minReplicas: 2
    minio:
      port: 9000
      serviceName: minio-svc
    monitoring:
      exporter:
        enabled: false
        port: 8083
      ipWhitelist:
      - 0.0.0.0/0
    networkpolicy:
      annotations: {}
      egress:
        enabled: false
        rules: []
      enabled: false
      ingress:
        enabled: false
        rules: []
    podLabels: {}
    priorityClassName: ""
    psql: {}
    puma:
      disableWorkerKiller: false
      threads:
        max: 4
        min: 4
      workerMaxMemory: 1024
    rack_attack:
      git_basic_auth:
        enabled: false
    redis:
      password: {}
    registry:
      api:
        port: 5000
        protocol: http
        serviceName: registry
      enabled: true
      tokenIssuer: gitlab-issuer
    resources:
      requests:
        cpu: 300m
        memory: 2.5G
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    service:
      externalPort: 8080
      internalPort: 8080
      type: ClusterIP
      workhorseExternalPort: 8181
      workhorseInternalPort: 8181
    serviceAccount:
      annotations: {}
      create: false
      enabled: false
    serviceLabels: {}
    sharedTmpDir: {}
    sharedUploadDir: {}
    shutdown:
      blackoutSeconds: 10
    sshHostKeys:
      mount: false
      mountName: ssh-host-keys
      types:
      - dsa
      - rsa
      - ecdsa
      - ed25519
    tolerations: []
    trusted_proxies: []
    webServer: puma
    workerProcesses: 2
    workhorse:
      extraArgs: ""
      imageScaler:
        maxFileSizeBytes: 250000
        maxProcs: 2
      keywatcher: true
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 30
      logFormat: json
      monitoring:
        exporter:
          enabled: false
          port: 9229
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        requests:
          cpu: 100m
          memory: 100M
      sentryDSN: ""
gitlab-runner:
  affinity: {}
  checkInterval: 30
  concurrent: 10
  configMaps: {}
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      defaultTheme: null
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableImpersonation: null
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      issueClosingPattern: null
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      maxRequestDurationSeconds: null
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
      webhookTimeout: null
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      nodeName: null
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      externalIP: null
      gitlab: {}
      hostSuffix: null
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      ssh: null
      tls: {}
    image: {}
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      host: null
      https: null
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
      path: null
      port: null
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      connectTimeout: null
      keepalives: null
      keepalivesCount: null
      keepalivesIdle: null
      keepalivesInterval: null
      password: {}
      tcpUserTimeout: null
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  hostAliases: []
  imagePullPolicy: IfNotPresent
  install: true
  metrics:
    enabled: true
  nodeSelector: {}
  podAnnotations:
    gitlab.com/prometheus_port: 9252
    gitlab.com/prometheus_scrape: "true"
  podLabels: {}
  rbac:
    clusterWideAccess: false
    create: true
    podSecurityPolicy:
      enabled: false
      resourceNames:
      - gitlab-runner
    rules: []
  resources: {}
  runners:
    builds: {}
    cache: {}
    config: |
      [[runners]]
        [runners.kubernetes]
        image = "ubuntu:18.04"
        {{- if .Values.global.minio.enabled }}
        [runners.cache]
          Type = "s3"
          Path = "gitlab-runner"
          Shared = true
          [runners.cache.s3]
            ServerAddress = {{ include "gitlab-runner.cache-tpl.s3ServerAddress" . }}
            BucketName = "runner-cache"
            BucketLocation = "us-east-1"
            Insecure = false
        {{ end }}
    helpers: {}
    locked: false
    services: {}
  secrets: []
  securityContext:
    fsGroup: 65533
    runAsUser: 100
  terminationGracePeriodSeconds: 3600
  tolerations: []
global:
  antiAffinity: soft
  appConfig:
    applicationSettingsCacheSeconds: 60
    artifacts:
      bucket: gitlab-artifacts
      connection: {}
      enabled: true
      proxy_download: true
    backups:
      bucket: gitlab-backups
      tmpBucket: tmp
    contentSecurityPolicy:
      enabled: false
      report_only: true
    cron_jobs: {}
    defaultCanCreateGroup: true
    defaultProjectsFeatures:
      builds: true
      issues: true
      mergeRequests: true
      snippets: true
      wiki: true
    defaultTheme: null
    dependencyProxy:
      bucket: gitlab-dependency-proxy
      connection: {}
      enabled: false
      proxy_download: true
    enableImpersonation: null
    enableSeatLink: true
    enableUsagePing: true
    externalDiffs:
      bucket: gitlab-mr-diffs
      connection: {}
      enabled: false
      proxy_download: true
    extra: {}
    gitlab_kas: {}
    gravatar: {}
    incomingEmail:
      address: ""
      clientSecret:
        key: secret
      enabled: false
      expungeDeleted: false
      host: imap.gmail.com
      idleTimeout: 60
      inboxMethod: imap
      logger:
        logPath: /dev/stdout
      mailbox: inbox
      password:
        key: password
        secret: ""
      pollInterval: 60
      port: 993
      ssl: true
      startTls: false
      user: ""
    initialDefaults: {}
    issueClosingPattern: null
    ldap:
      preventSignin: false
      servers: {}
    lfs:
      bucket: git-lfs
      connection: {}
      enabled: true
      proxy_download: true
    maxRequestDurationSeconds: null
    object_store:
      connection: {}
      enabled: false
      proxy_download: true
      storage_options: {}
    omniauth:
      enabled: true
      allowBypassTwoFactor: []
      allowSingleSignOn:
      - openid_connect
      autoLinkLdapUser: false
      autoLinkSamlUser: false
      autoLinkUser: []
      blockAutoCreatedUsers: false
      externalProviders:
      - openid_connect
      providers:
      - secret: keycloak-secret 
      syncProfileAttributes:
      - email
      syncProfileFromProvider:
      - openid_connect
    packages:
      bucket: gitlab-packages
      connection: {}
      enabled: true
      proxy_download: true
    pseudonymizer:
      bucket: gitlab-pseudo
      connection: {}
    sentry:
      enabled: false
    serviceDeskEmail:
      address: ""
      clientSecret:
        key: secret
      enabled: false
      expungeDeleted: false
      host: imap.gmail.com
      idleTimeout: 60
      inboxMethod: imap
      logger:
        logPath: /dev/stdout
      mailbox: inbox
      password:
        key: password
        secret: ""
      pollInterval: 60
      port: 993
      ssl: true
      startTls: false
      user: ""
    sidekiq:
      routingRules: []
    smartcard:
      enabled: false
      requiredForGitAccess: false
      sanExtensions: false
    terraformState:
      bucket: gitlab-terraform-state
      connection: {}
      enabled: false
    uploads:
      bucket: gitlab-uploads
      connection: {}
      enabled: true
      proxy_download: true
    usernameChangingEnabled: true
    webhookTimeout: null
  application:
    allowClusterRoles: true
    create: false
    links: []
  busybox:
    image:
      repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
      tag: latest
  certificates:
    customCAs: []
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
      tag: 20191127-r2
  common:
    labels: {}
  deployment:
    annotations: {}
  edition: ee
  email:
    display_name: GitLab
    from: ""
    reply_to: ""
    smime:
      certName: tls.crt
      enabled: false
      keyName: tls.key
      secretName: ""
    subject_suffix: ""
  extraEnv: {}
  geo:
    enabled: false
    nodeName: null
    psql:
      password: {}
    registry:
      replication:
        enabled: false
    role: primary
  gitaly:
    authToken: {}
    enabled: true
    external: []
    internal:
      names:
      - default
    service:
      externalPort: 8075
      internalPort: 8075
      name: gitaly
      tls:
        externalPort: 8076
        internalPort: 8076
      type: ClusterIP
    tls:
      enabled: false
  gitlab:
    license: {}
  grafana:
    enabled: false
  hosts:
    domain: techboyd.com
    externalIP: null
    gitlab: {}
    hostSuffix: null
    https: true
    kas: {}
    minio: {}
    pages: {}
    registry: {}
    smartcard: {}
    ssh: null
    tls: {}
  image: {}
  ingress:
    annotations: {}
    apiVersion: null
    configureCertmanager: false
    enabled: true
    path: /
    pathType: Prefix
    provider: nginx
    tls: {}
  initialRootPassword: {}
  kas:
    enabled: false
    service:
      apiExternalPort: 8153
  kubectl:
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
      tag: 1.16.15
    securityContext:
      fsGroup: 65534
      runAsUser: 65534
  minio:
    credentials: {}
    enabled: true
  oauth:
    gitlab-pages: {}
  operator:
    enabled: false
    rollout:
      autoPause: true
  pages:
    accessControl: false
    apiSecret: {}
    artifactsServer: true
    authSecret: {}
    enabled: false
    externalHttp: []
    externalHttps: []
    host: null
    https: null
    localStore:
      enabled: false
    objectStore:
      bucket: gitlab-pages
      connection: {}
      enabled: true
    path: null
    port: null
  pod:
    labels: {}
  praefect:
    authToken: {}
    autoMigrate: true
    dbSecret: {}
    enabled: false
    psql:
      sslMode: disable
    replaceInternalGitaly: true
    service:
      externalPort: 8075
      internalPort: 8075
      name: praefect
      tls:
        externalPort: 8076
        internalPort: 8076
      type: ClusterIP
    tls:
      enabled: false
    virtualStorages:
    - gitalyReplicas: 3
      maxUnavailable: 1
      name: default
  psql:
    connectTimeout: null
    keepalives: null
    keepalivesCount: null
    keepalivesIdle: null
    keepalivesInterval: null
    password: {}
    tcpUserTimeout: null
  rails:
    bootsnap:
      enabled: true
  railsSecrets: {}
  redis:
    password:
      enabled: true
  registry:
    bucket: registry
    certificate: {}
    httpSecret: {}
    notificationSecret: {}
    notifications:
      endpoints: []
  runner:
    registrationToken: {}
  service:
    annotations: {}
    labels: {}
  serviceAccount:
    annotations: {}
    create: true
    enabled: false
  shell:
    authToken: {}
    hostKeys: {}
    tcp:
      proxyProtocol: false
  smtp:
    address: smtp.mailgun.org
    authentication: plain
    enabled: false
    openssl_verify_mode: peer
    password:
      key: password
      secret: ""
    pool: false
    port: 2525
    starttls_auto: false
    user_name: ""
  time_zone: UTC
  tracing:
    connection:
      string: ""
    urlTemplate: ""
  webservice:
    workerTimeout: 60
  workhorse:
    serviceName: webservice-default
grafana:
  admin:
    existingSecret: bogus
    passwordKey: admin-password
    userKey: admin-user
  adminUser: admin
  affinity: {}
  autoscaling:
    enabled: false
  command:
  - sh
  - -x
  - /tmp/scripts/import-secret.sh
  containerSecurityContext: {}
  dashboardProviders: {}
  dashboards: {}
  dashboardsConfigMaps: {}
  datasources: {}
  deploymentStrategy:
    type: RollingUpdate
  downloadDashboards:
    env: {}
    envFromSecret: ""
    resources: {}
  downloadDashboardsImage:
    pullPolicy: IfNotPresent
    repository: curlimages/curl
    sha: ""
    tag: 7.73.0
  env:
    GF_SECURITY_ADMIN_PASSWORD: bogus
    GF_SECURITY_ADMIN_USER: bogus
  envFromSecret: ""
  envRenderSecret: {}
  envValueFrom: {}
  extraConfigmapMounts:
  - configMap: gitlab-grafana-import-secret
    mountPath: /tmp/scripts
    name: import-secret
    readOnly: true
  extraContainerVolumes: []
  extraContainers: ""
  extraEmptyDirMounts: []
  extraExposePorts: []
  extraInitContainers: []
  extraLabels: {}
  extraSecretMounts:
  - defaultMode: 400
    mountPath: /tmp/initial
    name: initial-password
    readOnly: true
    secretName: gitlab-grafana-initial-password
  extraVolumeMounts: []
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      defaultTheme: null
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableImpersonation: null
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      issueClosingPattern: null
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      maxRequestDurationSeconds: null
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
      webhookTimeout: null
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      nodeName: null
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      externalIP: null
      gitlab: {}
      hostSuffix: null
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      ssh: null
      tls: {}
    image: {}
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      host: null
      https: null
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
      path: null
      port: null
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      connectTimeout: null
      keepalives: null
      keepalivesCount: null
      keepalivesIdle: null
      keepalivesInterval: null
      password: {}
      tcpUserTimeout: null
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  grafana.ini:
    analytics:
      check_for_updates: true
    auth:
      login_cookie_name: gitlab_grafana_session
    grafana_net:
      url: https://grafana.net
    log:
      mode: console
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    server:
      root_url: http://localhost/-/grafana/
      serve_from_sub_path: true
  hostAliases: []
  image:
    pullPolicy: IfNotPresent
    repository: grafana/grafana
    sha: ""
    tag: 7.5.5
  imageRenderer:
    enabled: false
    env:
      HTTP_HOST: 0.0.0.0
    grafanaSubPath: ""
    hostAliases: []
    image:
      pullPolicy: Always
      repository: grafana/grafana-image-renderer
      sha: ""
      tag: latest
    networkPolicy:
      limitEgress: false
      limitIngress: true
    podPortName: http
    priorityClassName: ""
    replicas: 1
    resources: {}
    revisionHistoryLimit: 10
    securityContext: {}
    service:
      enabled: true
      port: 8081
      portName: http
      targetPort: 8081
    serviceAccountName: ""
  ingress:
    annotations: {}
    enabled: false
    extraPaths: []
    hosts:
    - chart-example.local
    labels: {}
    path: /
    pathType: Prefix
    tls: []
  initChownData:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      repository: busybox
      sha: ""
      tag: 1.31.1
    resources: {}
  ldap:
    config: ""
    enabled: false
    existingSecret: ""
  livenessProbe:
    failureThreshold: 10
    httpGet:
      path: /api/health
      port: 3000
    initialDelaySeconds: 60
    timeoutSeconds: 30
  nameOverride: grafana-app
  namespaceOverride: ""
  nodeSelector: {}
  notifiers: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    enabled: false
    finalizers:
    - kubernetes.io/pvc-protection
    inMemory:
      enabled: false
    size: 10Gi
    type: pvc
  plugins: []
  podDisruptionBudget: {}
  podPortName: grafana
  rbac:
    create: true
    extraClusterRoleRules: []
    extraRoleRules: []
    namespaced: false
    pspEnabled: true
    pspUseAppArmor: true
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3000
  replicas: 1
  resources: {}
  revisionHistoryLimit: 10
  securityContext:
    fsGroup: 472
    runAsGroup: 472
    runAsUser: 472
  service:
    annotations: {}
    enabled: true
    labels: {}
    port: 80
    portName: service
    targetPort: 3000
    type: ClusterIP
  serviceAccount:
    create: true
    name: null
    nameTest: null
  serviceMonitor:
    enabled: false
    interval: 1m
    labels: {}
    path: /metrics
    relabelings: []
    scheme: http
    scrapeTimeout: 30s
    tlsConfig: {}
  sidecar:
    dashboards:
      SCProvider: true
      defaultFolderName: null
      enabled: true
      folder: /tmp/dashboards
      folderAnnotation: null
      label: gitlab_grafana_dashboard
      labelValue: null
      provider:
        allowUiUpdates: false
        disableDelete: false
        folder: ""
        foldersFromFilesStructure: false
        name: sidecarProvider
        orgid: 1
        type: file
      resource: both
      searchNamespace: null
    datasources:
      enabled: true
      label: gitlab_grafana_datasource
      labelValue: null
      resource: both
      searchNamespace: null
    enableUniqueFilenames: false
    image:
      repository: quay.io/kiwigrid/k8s-sidecar
      sha: ""
      tag: 1.10.7
    imagePullPolicy: IfNotPresent
    notifiers:
      enabled: false
      label: grafana_notifier
      resource: both
      searchNamespace: null
    resources: {}
  smtp:
    existingSecret: ""
    passwordKey: password
    userKey: user
  testFramework:
    enabled: false
    image: bats/bats
    imagePullPolicy: IfNotPresent
    securityContext: {}
    tag: v1.1.0
  tolerations: []
minio:
  common:
    labels: {}
  configPath: ""
  defaultBuckets:
  - name: registry
  - name: git-lfs
  - name: runner-cache
  - name: gitlab-uploads
  - name: gitlab-artifacts
  - name: gitlab-backups
  - name: gitlab-packages
  - name: tmp
  - name: gitlab-pseudo
  - name: gitlab-mr-diffs
  - name: gitlab-terraform-state
  - name: gitlab-dependency-proxy
  - name: gitlab-pages
  deployment:
    strategy:
      type: Recreate
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      gitlab: {}
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      tls: {}
    image: {}
    ingress:
      annotations: {}
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      password: {}
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  image: minio/minio
  imageTag: RELEASE.2017-12-28T01-21-00Z
  ingress:
    annotations: {}
    proxyBodySize: "0"
    proxyBuffering: "off"
    proxyReadTimeout: 900
    tls: {}
  init:
    image: {}
    resources:
      requests:
        cpu: 50m
    script: sed -e 's@ACCESS_KEY@'"$(cat /config/accesskey)"'@' -e 's@SECRET_KEY@'"$(cat
      /config/secretkey)"'@' /config/config.json > /minio/config.json
  maxUnavailable: 1
  minioConfig:
    aqmp:
      autoDeleted: false
      deliveryMode: 0
      durable: false
      enable: false
      exchange: ""
      exchangeType: ""
      immediate: false
      internal: false
      mandatory: false
      noWait: false
      routingKey: ""
      url: ""
    browser: "on"
    domain: ""
    elasticsearch:
      enable: false
      format: namespace
      index: ""
      url: ""
    kafka:
      brokers: "null"
      enable: false
      topic: ""
    logger:
      console:
        enable: true
      file:
        enable: false
        filename: ""
    mqtt:
      broker: ""
      clientId: ""
      enable: false
      password: ""
      qos: 0
      topic: ""
      username: ""
    mysql:
      database: ""
      dsnString: ""
      enable: false
      format: namespace
      host: ""
      password: ""
      port: ""
      table: ""
      user: ""
    nats:
      address: ""
      async: false
      clientID: ""
      clusterID: ""
      enable: false
      enableStreaming: false
      maxPubAcksInflight: 0
      password: ""
      pingInterval: 0
      secure: false
      subject: ""
      token: ""
      username: ""
    postgresql:
      connectionString: ""
      database: ""
      enable: false
      format: namespace
      host: ""
      password: ""
      port: ""
      table: ""
      user: ""
    redis:
      address: ""
      enable: false
      format: namespace
      key: ""
      password: ""
    region: us-east-1
    webhook:
      enable: false
      endpoint: ""
  minioMc:
    image: minio/mc
    tag: RELEASE.2018-07-13T00-53-22Z
  mountPath: /export
  networkPolicy:
    allowExternal: true
    enabled: false
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: true
    matchExpressions: []
    matchLabels: {}
    size: 10Gi
    subPath: ""
  podAnnotations: {}
  podLabels: {}
  replicas: 4
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  servicePort: 9000
  serviceType: ClusterIP
  tolerations: []
nginx-ingress:
  controller:
    addHeaders:
      Referrer-Policy: strict-origin-when-cross-origin
    admissionWebhooks:
      annotations: {}
      certificate: /usr/local/certificates/cert
      enabled: false
      failurePolicy: Fail
      key: /usr/local/certificates/key
      namespaceSelector: {}
      objectSelector: {}
      patch:
        enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: docker.io/jettech/kube-webhook-certgen
          tag: v1.5.0
        nodeSelector: {}
        podAnnotations: {}
        priorityClassName: ""
        runAsUser: 2000
        tolerations: []
      port: 8443
      service:
        annotations: {}
        externalIPs: []
        loadBalancerSourceRanges: []
        servicePort: 443
        type: ClusterIP
    affinity: {}
    annotations: {}
    autoscaling:
      enabled: false
      maxReplicas: 11
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50
    autoscalingTemplate: []
    config:
      hsts: "true"
      hsts-include-subdomains: "false"
      hsts-max-age: "63072000"
      server-name-hash-bucket-size: "256"
      server-tokens: "false"
      ssl-ciphers: ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4
      ssl-protocols: TLSv1.3 TLSv1.2
      use-http2: "true"
    configAnnotations: {}
    configMapNamespace: ""
    containerPort:
      http: 80
      https: 443
    customTemplate:
      configMapKey: ""
      configMapName: ""
    dnsConfig: {}
    dnsPolicy: ClusterFirst
    electionID: ingress-controller-leader
    enableMimalloc: true
    extraArgs: {}
    extraContainers: []
    extraEnvs: []
    extraInitContainers: []
    extraVolumeMounts: []
    extraVolumes: []
    healthCheckPath: /healthz
    hostNetwork: false
    hostPort:
      enabled: false
      ports:
        http: 80
        https: 443
    image:
      allowPrivilegeEscalation: true
      digest: sha256:1f4f402b9c14f3ae92b11ada1dfe9893a88f0faeb0b2f4b903e2c67a0c3bf0de
      pullPolicy: IfNotPresent
      repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/ingress-nginx/controller
      runAsUser: 101
      tag: v0.41.2
    ingressClass: nginx
    keda:
      apiVersion: keda.sh/v1alpha1
      behavior: {}
      cooldownPeriod: 300
      enabled: false
      maxReplicas: 11
      minReplicas: 1
      pollingInterval: 30
      restoreToOriginalReplicaCount: false
      triggers: []
    kind: Deployment
    labels: {}
    lifecycle:
      preStop:
        exec:
          command:
          - /wait-shutdown
    livenessProbe:
      failureThreshold: 5
      initialDelaySeconds: 10
      periodSeconds: 10
      port: 10254
      successThreshold: 1
      timeoutSeconds: 1
    metrics:
      enabled: true
      port: 10254
      prometheusRule:
        additionalLabels: {}
        enabled: false
        rules: []
      service:
        annotations:
          gitlab.com/prometheus_port: "10254"
          gitlab.com/prometheus_scrape: "true"
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
        externalIPs: []
        loadBalancerSourceRanges: []
        servicePort: 9913
        type: ClusterIP
      serviceMonitor:
        additionalLabels: {}
        enabled: false
        metricRelabelings: []
        namespace: ""
        namespaceSelector: {}
        scrapeInterval: 30s
        targetLabels: []
    minAvailable: 1
    minReadySeconds: 0
    name: controller
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    podSecurityContext: {}
    priorityClassName: ""
    proxySetHeaders: {}
    publishService:
      enabled: true
      pathOverride: ""
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      port: 10254
      successThreshold: 1
      timeoutSeconds: 1
    replicaCount: 2
    reportNodeInternalIp: false
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    scope:
      enabled: true
      namespace: ""
    service:
      annotations: {}
      enableHttp: true
      enableHttps: true
      enabled: true
      externalIPs: []
      externalTrafficPolicy: Local
      internal:
        annotations: {}
        enabled: false
        loadBalancerSourceRanges: []
      labels: {}
      loadBalancerSourceRanges: []
      nodePorts:
        http: ""
        https: ""
        tcp: {}
        udp: {}
      ports:
        http: 80
        https: 443
      targetPorts:
        http: http
        https: https
      type: LoadBalancer
    sysctls: {}
    tcp:
      annotations: {}
      configMapNamespace: ""
    terminationGracePeriodSeconds: 300
    tolerations: []
    topologySpreadConstraints: []
    udp:
      annotations: {}
      configMapNamespace: ""
    updateStrategy: {}
  defaultBackend:
    affinity: {}
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50
    enabled: true
    extraArgs: {}
    extraEnvs: []
    image:
      allowPrivilegeEscalation: false
      pullPolicy: IfNotPresent
      readOnlyRootFilesystem: true
      repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/defaultbackend-amd64
      runAsNonRoot: true
      runAsUser: 65534
      tag: "1.5"
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    minAvailable: 1
    name: default-backend
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    podSecurityContext: {}
    port: 8080
    priorityClassName: ""
    readinessProbe:
      failureThreshold: 6
      initialDelaySeconds: 0
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    replicaCount: 1
    resources:
      requests:
        cpu: 5m
        memory: 5Mi
    service:
      annotations: {}
      externalIPs: []
      loadBalancerSourceRanges: []
      servicePort: 80
      type: ClusterIP
    serviceAccount:
      create: true
      name: null
    tolerations: []
  enabled: false
  rbac:
    create: true
    scope: true
  serviceAccount:
    create: true
    name: null
  tcpExternalConfig: "true"
postgresql:
  commonAnnotiations: {}
  existingSecret: bogus
  extraEnv: []
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      defaultTheme: null
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableImpersonation: null
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      issueClosingPattern: null
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      maxRequestDurationSeconds: null
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
      webhookTimeout: null
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      nodeName: null
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      externalIP: null
      gitlab: {}
      hostSuffix: null
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      ssh: null
      tls: {}
    image: {}
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      host: null
      https: null
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
      path: null
      port: null
    pod:
      labels: {}
    postgresql: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      connectTimeout: null
      keepalives: null
      keepalivesCount: null
      keepalivesIdle: null
      keepalivesInterval: null
      password: {}
      tcpUserTimeout: null
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/postgresql
    tag: 12.7.0
  initdbScriptsConfigMap: bogus
  install: true
  ldap:
    baseDN: ""
    bindDN: ""
    enabled: false
    port: ""
    prefix: ""
    scheme: ""
    search_attr: ""
    search_filter: ""
    server: ""
    suffix: ""
    tls: false
    url: ""
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  master:
    affinity: {}
    annotations: {}
    extraInitContainers: []
    extraVolumeMounts:
    - mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
      name: custom-init-scripts
      subPath: init_revision.sh
    extraVolumes: []
    labels: {}
    nodeSelector: {}
    podAnnotations:
      postgresql.gitlab/init-revision: "1"
    podLabels: {}
    priorityClassName: ""
    service: {}
    sidecars: []
    tolerations: []
  metrics:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/postgres-exporter
      tag: 0.8.0-debian-10-r99
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    prometheusRule:
      additionalLabels: {}
      enabled: false
      namespace: ""
      rules: []
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    securityContext:
      enabled: false
      runAsUser: 1001
    service:
      annotations:
        prometheus.io/port: "9187"
        prometheus.io/scrape: "true"
      type: ClusterIP
    serviceMonitor:
      additionalLabels: {}
      enabled: false
  networkPolicy:
    allowExternal: true
    enabled: false
    explicitNamespacesSelector: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    annotations: {}
    enabled: true
    mountPath: /bitnami/postgresql
    size: 8Gi
    subPath: ""
  postgresqlDataDir: /bitnami/postgresql/data
  postgresqlDatabase: gitlabhq_production
  postgresqlPostgresPassword: bogus
  postgresqlUsername: gitlab
  psp:
    create: false
  rbac:
    create: false
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replication:
    applicationName: my_application
    enabled: false
    numSynchronousReplicas: 0
    password: repl_password
    slaveReplicas: 1
    synchronousCommit: "off"
    user: repl_user
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  service:
    annotations: {}
    port: 5432
    type: ClusterIP
  serviceAccount:
    enabled: false
  shmVolume:
    chmod:
      enabled: true
    enabled: true
  slave:
    affinity: {}
    annotations: {}
    extraInitContainers: |
      # - name: do-something
      #   image: busybox
      #   command: ['do', 'something']
    extraVolumeMounts: []
    extraVolumes: []
    labels: {}
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""
    service: {}
    sidecars: []
    tolerations: []
  updateStrategy:
    type: RollingUpdate
  usePasswordFile: true
  volumePermissions:
    enabled: false
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
    securityContext:
      runAsUser: 0
prometheus:
  alertRelabelConfigs: null
  alertmanager:
    affinity: {}
    baseURL: http://localhost:9093
    configFileName: alertmanager.yml
    configFromSecret: ""
    configMapOverrideName: ""
    deploymentAnnotations: {}
    emptyDir:
      sizeLimit: ""
    enabled: false
    extraArgs: {}
    extraEnv: {}
    extraInitContainers: []
    extraSecretMounts: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/alertmanager
      tag: v0.21.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      tls: []
    name: alertmanager
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      type: ClusterIP
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        enableMeshPeer: false
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    tolerations: []
    useClusterRole: true
    useExistingRole: false
  alertmanagerFiles:
    alertmanager.yml:
      global: {}
      receivers:
      - name: default-receiver
      route:
        group_interval: 5m
        group_wait: 10s
        receiver: default-receiver
        repeat_interval: 3h
  configmapReload:
    alertmanager:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.4.0
      name: configmap-reload
      resources: {}
    prometheus:
      enabled: true
      extraArgs: {}
      extraConfigmapMounts: []
      extraVolumeDirs: []
      image:
        pullPolicy: IfNotPresent
        repository: jimmidyson/configmap-reload
        tag: v0.4.0
      name: configmap-reload
      resources: {}
  extraScrapeConfigs: null
  forceNamespace: null
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      defaultTheme: null
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableImpersonation: null
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      issueClosingPattern: null
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      maxRequestDurationSeconds: null
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
      webhookTimeout: null
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      nodeName: null
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      externalIP: null
      gitlab: {}
      hostSuffix: null
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      ssh: null
      tls: {}
    image: {}
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      host: null
      https: null
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
      path: null
      port: null
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      connectTimeout: null
      keepalives: null
      keepalivesCount: null
      keepalivesIdle: null
      keepalivesInterval: null
      password: {}
      tcpUserTimeout: null
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  imagePullSecrets: null
  install: true
  kube-state-metrics:
    affinity: {}
    autosharding:
      enabled: false
    collectors:
      certificatesigningrequests: true
      configmaps: true
      cronjobs: true
      daemonsets: true
      deployments: true
      endpoints: true
      horizontalpodautoscalers: true
      ingresses: true
      jobs: true
      limitranges: true
      mutatingwebhookconfigurations: true
      namespaces: true
      networkpolicies: true
      nodes: true
      persistentvolumeclaims: true
      persistentvolumes: true
      poddisruptionbudgets: true
      pods: true
      replicasets: true
      replicationcontrollers: true
      resourcequotas: true
      secrets: true
      services: true
      statefulsets: true
      storageclasses: true
      validatingwebhookconfigurations: true
      verticalpodautoscalers: false
      volumeattachments: true
    customLabels: {}
    global:
      antiAffinity: soft
      appConfig:
        applicationSettingsCacheSeconds: 60
        artifacts:
          bucket: gitlab-artifacts
          connection: {}
          enabled: true
          proxy_download: true
        backups:
          bucket: gitlab-backups
          tmpBucket: tmp
        contentSecurityPolicy:
          enabled: false
          report_only: true
        cron_jobs: {}
        defaultCanCreateGroup: true
        defaultProjectsFeatures:
          builds: true
          issues: true
          mergeRequests: true
          snippets: true
          wiki: true
        defaultTheme: null
        dependencyProxy:
          bucket: gitlab-dependency-proxy
          connection: {}
          enabled: false
          proxy_download: true
        enableImpersonation: null
        enableSeatLink: true
        enableUsagePing: true
        externalDiffs:
          bucket: gitlab-mr-diffs
          connection: {}
          enabled: false
          proxy_download: true
        extra: {}
        gitlab_kas: {}
        gravatar: {}
        incomingEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        initialDefaults: {}
        issueClosingPattern: null
        ldap:
          preventSignin: false
          servers: {}
        lfs:
          bucket: git-lfs
          connection: {}
          enabled: true
          proxy_download: true
        maxRequestDurationSeconds: null
        object_store:
          connection: {}
          enabled: false
          proxy_download: true
          storage_options: {}
        omniauth:
          allowBypassTwoFactor: []
          allowSingleSignOn:
          - saml
          autoLinkLdapUser: false
          autoLinkSamlUser: false
          autoLinkUser: []
          blockAutoCreatedUsers: true
          enabled: false
          externalProviders: []
          providers: []
          syncProfileAttributes:
          - email
          syncProfileFromProvider: []
        packages:
          bucket: gitlab-packages
          connection: {}
          enabled: true
          proxy_download: true
        pseudonymizer:
          bucket: gitlab-pseudo
          connection: {}
        sentry:
          enabled: false
        serviceDeskEmail:
          address: ""
          clientSecret:
            key: secret
          enabled: false
          expungeDeleted: false
          host: imap.gmail.com
          idleTimeout: 60
          inboxMethod: imap
          logger:
            logPath: /dev/stdout
          mailbox: inbox
          password:
            key: password
            secret: ""
          pollInterval: 60
          port: 993
          ssl: true
          startTls: false
          user: ""
        sidekiq:
          routingRules: []
        smartcard:
          enabled: false
          requiredForGitAccess: false
          sanExtensions: false
        terraformState:
          bucket: gitlab-terraform-state
          connection: {}
          enabled: false
        uploads:
          bucket: gitlab-uploads
          connection: {}
          enabled: true
          proxy_download: true
        usernameChangingEnabled: true
        webhookTimeout: null
      application:
        allowClusterRoles: true
        create: false
        links: []
      busybox:
        image:
          repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
          tag: latest
      certificates:
        customCAs: []
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
          tag: 20191127-r2
      common:
        labels: {}
      deployment:
        annotations: {}
      edition: ee
      email:
        display_name: GitLab
        from: ""
        reply_to: ""
        smime:
          certName: tls.crt
          enabled: false
          keyName: tls.key
          secretName: ""
        subject_suffix: ""
      extraEnv: {}
      geo:
        enabled: false
        nodeName: null
        psql:
          password: {}
        registry:
          replication:
            enabled: false
        role: primary
      gitaly:
        authToken: {}
        enabled: true
        external: []
        internal:
          names:
          - default
        service:
          externalPort: 8075
          internalPort: 8075
          name: gitaly
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
      gitlab:
        license: {}
      grafana:
        enabled: false
      hosts:
        domain: techboyd.com
        externalIP: null
        gitlab: {}
        hostSuffix: null
        https: true
        kas: {}
        minio: {}
        pages: {}
        registry: {}
        smartcard: {}
        ssh: null
        tls: {}
      image: {}
      ingress:
        annotations: {}
        apiVersion: null
        configureCertmanager: false
        enabled: true
        path: /
        pathType: Prefix
        provider: nginx
        tls: {}
      initialRootPassword: {}
      kas:
        enabled: false
        service:
          apiExternalPort: 8153
      kubectl:
        image:
          repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
          tag: 1.16.15
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
      minio:
        credentials: {}
        enabled: true
      oauth:
        gitlab-pages: {}
      operator:
        enabled: false
        rollout:
          autoPause: true
      pages:
        accessControl: false
        apiSecret: {}
        artifactsServer: true
        authSecret: {}
        enabled: false
        externalHttp: []
        externalHttps: []
        host: null
        https: null
        localStore:
          enabled: false
        objectStore:
          bucket: gitlab-pages
          connection: {}
          enabled: true
        path: null
        port: null
      pod:
        labels: {}
      praefect:
        authToken: {}
        autoMigrate: true
        dbSecret: {}
        enabled: false
        psql:
          sslMode: disable
        replaceInternalGitaly: true
        service:
          externalPort: 8075
          internalPort: 8075
          name: praefect
          tls:
            externalPort: 8076
            internalPort: 8076
          type: ClusterIP
        tls:
          enabled: false
        virtualStorages:
        - gitalyReplicas: 3
          maxUnavailable: 1
          name: default
      psql:
        connectTimeout: null
        keepalives: null
        keepalivesCount: null
        keepalivesIdle: null
        keepalivesInterval: null
        password: {}
        tcpUserTimeout: null
      rails:
        bootsnap:
          enabled: true
      railsSecrets: {}
      redis:
        password:
          enabled: true
      registry:
        bucket: registry
        certificate: {}
        httpSecret: {}
        notificationSecret: {}
        notifications:
          endpoints: []
      runner:
        registrationToken: {}
      service:
        annotations: {}
        labels: {}
      serviceAccount:
        annotations: {}
        create: true
        enabled: false
      shell:
        authToken: {}
        hostKeys: {}
        tcp:
          proxyProtocol: false
      smtp:
        address: smtp.mailgun.org
        authentication: plain
        enabled: false
        openssl_verify_mode: peer
        password:
          key: password
          secret: ""
        pool: false
        port: 2525
        starttls_auto: false
        user_name: ""
      time_zone: UTC
      tracing:
        connection:
          string: ""
        urlTemplate: ""
      webservice:
        workerTimeout: 60
      workhorse:
        serviceName: webservice-default
    hostNetwork: false
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/coreos/kube-state-metrics
      tag: v1.9.7
    imagePullSecrets: []
    kubeTargetVersionOverride: ""
    namespaceOverride: ""
    nodeSelector: {}
    podAnnotations: {}
    podDisruptionBudget: {}
    podSecurityPolicy:
      additionalVolumes: []
      annotations: {}
      enabled: false
    prometheus:
      monitor:
        additionalLabels: {}
        enabled: false
        honorLabels: false
        namespace: ""
    prometheusScrape: true
    rbac:
      create: true
    replicas: 1
    resources: {}
    securityContext:
      enabled: true
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    service:
      annotations: {}
      loadBalancerIP: ""
      nodePort: 0
      port: 8080
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: true
      imagePullSecrets: []
      name: null
    tolerations: []
  kubeStateMetrics:
    enabled: false
  networkPolicy:
    enabled: false
  nodeExporter:
    enabled: false
    extraArgs: {}
    extraConfigmapMounts: []
    extraHostPathMounts: []
    extraInitContainers: []
    hostNetwork: true
    hostPID: true
    image:
      pullPolicy: IfNotPresent
      repository: prom/node-exporter
      tag: v1.0.1
    name: node-exporter
    nodeSelector: {}
    pod:
      labels: {}
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    resources: {}
    securityContext: {}
    service:
      annotations:
        prometheus.io/scrape: "true"
      clusterIP: None
      externalIPs: []
      hostPort: 9100
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9100
      type: ClusterIP
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  podSecurityPolicy:
    enabled: false
  pushgateway:
    deploymentAnnotations: {}
    enabled: false
    extraArgs: {}
    extraInitContainers: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/pushgateway
      tag: v1.2.0
    ingress:
      annotations: {}
      enabled: false
      extraPaths: []
      hosts: []
      tls: []
    name: pushgateway
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/probe: pushgateway
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9091
      type: ClusterIP
    tolerations: []
  rbac:
    create: true
  server:
    affinity: {}
    alertmanagers: []
    baseURL: ""
    configMapOverrideName: ""
    configPath: /etc/config/prometheus.yml
    deploymentAnnotations: {}
    emptyDir:
      sizeLimit: ""
    enableServiceLinks: true
    enabled: true
    env: []
    extraArgs: {}
    extraConfigmapMounts: []
    extraFlags:
    - web.enable-lifecycle
    extraHostPathMounts: []
    extraInitContainers: []
    extraSecretMounts: []
    extraVolumeMounts: []
    extraVolumes: []
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    hostAliases: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/prometheus
      tag: v2.21.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      extraPaths: []
      hosts: []
      tls: []
    livenessProbeFailureThreshold: 3
    livenessProbeInitialDelay: 30
    livenessProbePeriodSeconds: 15
    livenessProbeSuccessThreshold: 1
    livenessProbeTimeout: 30
    name: server
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      existingClaim: ""
      mountPath: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    podSecurityPolicy:
      annotations: {}
    prefixURL: ""
    priorityClassName: ""
    readinessProbeFailureThreshold: 3
    readinessProbeInitialDelay: 30
    readinessProbePeriodSeconds: 5
    readinessProbeSuccessThreshold: 1
    readinessProbeTimeout: 30
    remoteRead: []
    remoteWrite: []
    replicaCount: 1
    resources: {}
    retention: 15d
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      gRPC:
        enabled: false
        servicePort: 10901
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      sessionAffinity: None
      statefulsetReplica:
        enabled: false
        replica: 0
      type: ClusterIP
    sidecarContainers: null
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        gRPC:
          enabled: false
          servicePort: 10901
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    strategy:
      type: Recreate
    terminationGracePeriodSeconds: 300
    tolerations: []
    verticalAutoscaler:
      enabled: false
  serverFiles:
    alerting_rules.yml: {}
    alerts: {}
    prometheus.yml:
      rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-apiservers
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: default;kubernetes;https
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
          - __meta_kubernetes_endpoint_port_name
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_scrape
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_gitlab_com_prometheus_scrape
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_service_annotation_gitlab_com_prometheus_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_service_annotation_gitlab_com_prometheus_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_gitlab_com_prometheus_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: kubernetes_node
      - job_name: kubernetes-services
        kubernetes_sd_configs:
        - role: service
        metrics_path: /probe
        params:
          module:
          - http_2xx
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_gitlab_com_prometheus_probe
        - source_labels:
          - __address__
          target_label: __param_target
        - replacement: blackbox
          target_label: __address__
        - source_labels:
          - __param_target
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name
    recording_rules.yml: {}
    rules: {}
  serviceAccounts:
    alertmanager:
      annotations: {}
      create: true
    nodeExporter:
      annotations: {}
      create: true
    pushgateway:
      annotations: {}
      create: true
    server:
      annotations: {}
      create: true
redis:
  cluster:
    enabled: false
    slaveCount: 2
  clusterDomain: cluster.local
  configmap: |-
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  existingSecret: gitlab-redis-secret
  existingSecretKey: redis-password
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      defaultTheme: null
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableImpersonation: null
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      issueClosingPattern: null
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      maxRequestDurationSeconds: null
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
      webhookTimeout: null
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      nodeName: null
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      externalIP: null
      gitlab: {}
      hostSuffix: null
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      ssh: null
      tls: {}
    image: {}
    ingress:
      annotations: {}
      apiVersion: null
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      host: null
      https: null
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
      path: null
      port: null
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      connectTimeout: null
      keepalives: null
      keepalivesCount: null
      keepalivesIdle: null
      keepalivesInterval: null
      password: {}
      tcpUserTimeout: null
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/redis
    tag: 6.0.9-debian-10-r0
  install: true
  master:
    affinity: {}
    command: /run.sh
    customLivenessProbe: {}
    customReadinessProbe: {}
    disableCommands:
    - FLUSHDB
    - FLUSHALL
    extraEnvVars: []
    extraEnvVarsCM: []
    extraEnvVarsSecret: []
    extraFlags: []
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    persistence:
      accessModes:
      - ReadWriteOnce
      enabled: true
      matchExpressions: {}
      matchLabels: {}
      path: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podLabels: {}
    preExecCmds: ""
    priorityClassName: ""
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    service:
      annotations: {}
      labels: {}
      port: 6379
      type: ClusterIP
    shareProcessNamespace: false
    statefulset:
      labels: {}
      updateStrategy: RollingUpdate
  metrics:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/redis-exporter
      tag: 1.12.1-debian-10-r11
    podAnnotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
    prometheusRule:
      additionalLabels: {}
      enabled: false
      namespace: ""
      rules: []
    service:
      annotations: {}
      labels: {}
      type: ClusterIP
    serviceMonitor:
      enabled: false
      selector:
        prometheus: kube-prometheus
  networkPolicy:
    enabled: false
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  password: ""
  persistence: {}
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  podSecurityPolicy:
    create: false
  rbac:
    create: false
    role:
      rules: []
  redisPort: 6379
  securityContext:
    enabled: true
    fsGroup: 1001
  sentinel:
    customLivenessProbe: {}
    customReadinessProbe: {}
    downAfterMilliseconds: 60000
    enabled: false
    failoverTimeout: 18000
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/redis-sentinel
      tag: 6.0.8-debian-10-r55
    initialCheckTimeout: 5
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    masterSet: mymaster
    parallelSyncs: 1
    port: 26379
    quorum: 2
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    service:
      annotations: {}
      labels: {}
      redisPort: 6379
      sentinelPort: 26379
      type: ClusterIP
    staticID: false
    usePassword: true
  serviceAccount:
    create: false
  slave:
    affinity: {}
    command: /run.sh
    customLivenessProbe: {}
    customReadinessProbe: {}
    disableCommands:
    - FLUSHDB
    - FLUSHALL
    extraEnvVars: []
    extraEnvVarsCM: []
    extraEnvVarsSecret: []
    extraFlags: []
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    persistence:
      accessModes:
      - ReadWriteOnce
      enabled: true
      matchExpressions: {}
      matchLabels: {}
      path: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podLabels: {}
    port: 6379
    preExecCmds: ""
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    service:
      annotations: {}
      labels: {}
      port: 6379
      type: ClusterIP
    shareProcessNamespace: false
    spreadConstraints: {}
    statefulset:
      labels: {}
      updateStrategy: RollingUpdate
  sysctlImage:
    command: []
    enabled: false
    mountHostSys: false
    pullPolicy: Always
    registry: docker.io
    repository: bitnami/minideb
    resources: {}
    tag: buster
  tls:
    authClients: true
    enabled: false
  usePassword: true
  usePasswordFile: true
  volumePermissions:
    enabled: false
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
    resources: {}
    securityContext:
      runAsUser: 0
registry:
  annotations: {}
  authAutoRedirect: false
  common:
    labels: {}
  compatibility:
    schema1:
      enabled: false
  database:
    enabled: false
    migrations:
      activeDeadlineSeconds: 3600
      backoffLimit: 6
      enabled: true
    name: registry
    password: {}
    ssl: {}
    sslmode: disable
    user: registry
  debug:
    addr:
      port: 5001
    prometheus:
      enabled: false
      path: /metrics
  deployment:
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 5
      path: /debug/health
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 5
      path: /debug/health
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    strategy: {}
    terminationGracePeriodSeconds: 30
  draintimeout: "0"
  enabled: true
  gc:
    disabled: true
  global:
    antiAffinity: soft
    appConfig:
      applicationSettingsCacheSeconds: 60
      artifacts:
        bucket: gitlab-artifacts
        connection: {}
        enabled: true
        proxy_download: true
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
      contentSecurityPolicy:
        enabled: false
        report_only: true
      cron_jobs: {}
      defaultCanCreateGroup: true
      defaultProjectsFeatures:
        builds: true
        issues: true
        mergeRequests: true
        snippets: true
        wiki: true
      dependencyProxy:
        bucket: gitlab-dependency-proxy
        connection: {}
        enabled: false
        proxy_download: true
      enableSeatLink: true
      enableUsagePing: true
      externalDiffs:
        bucket: gitlab-mr-diffs
        connection: {}
        enabled: false
        proxy_download: true
      extra: {}
      gitlab_kas: {}
      gravatar: {}
      incomingEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      initialDefaults: {}
      ldap:
        preventSignin: false
        servers: {}
      lfs:
        bucket: git-lfs
        connection: {}
        enabled: true
        proxy_download: true
      object_store:
        connection: {}
        enabled: false
        proxy_download: true
        storage_options: {}
      omniauth:
        allowBypassTwoFactor: []
        allowSingleSignOn:
        - saml
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        autoLinkUser: []
        blockAutoCreatedUsers: true
        enabled: false
        externalProviders: []
        providers: []
        syncProfileAttributes:
        - email
        syncProfileFromProvider: []
      packages:
        bucket: gitlab-packages
        connection: {}
        enabled: true
        proxy_download: true
      pseudonymizer:
        bucket: gitlab-pseudo
        connection: {}
      sentry:
        enabled: false
      serviceDeskEmail:
        address: ""
        clientSecret:
          key: secret
        enabled: false
        expungeDeleted: false
        host: imap.gmail.com
        idleTimeout: 60
        inboxMethod: imap
        logger:
          logPath: /dev/stdout
        mailbox: inbox
        password:
          key: password
          secret: ""
        pollInterval: 60
        port: 993
        ssl: true
        startTls: false
        user: ""
      sidekiq:
        routingRules: []
      smartcard:
        enabled: false
        requiredForGitAccess: false
        sanExtensions: false
      terraformState:
        bucket: gitlab-terraform-state
        connection: {}
        enabled: false
      uploads:
        bucket: gitlab-uploads
        connection: {}
        enabled: true
        proxy_download: true
      usernameChangingEnabled: true
    application:
      allowClusterRoles: true
      create: false
      links: []
    busybox:
      image:
        repository: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox
        tag: latest
    certificates:
      customCAs: []
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20191127-r2
    common:
      labels: {}
    deployment:
      annotations: {}
    edition: ee
    email:
      display_name: GitLab
      from: ""
      reply_to: ""
      smime:
        certName: tls.crt
        enabled: false
        keyName: tls.key
        secretName: ""
      subject_suffix: ""
    extraEnv: {}
    geo:
      enabled: false
      psql:
        password: {}
      registry:
        replication:
          enabled: false
      role: primary
    gitaly:
      authToken: {}
      enabled: true
      external: []
      internal:
        names:
        - default
      service:
        externalPort: 8075
        internalPort: 8075
        name: gitaly
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
    gitlab:
      license: {}
    grafana:
      enabled: false
    hosts:
      domain: techboyd.com
      gitlab: {}
      https: true
      kas: {}
      minio: {}
      pages: {}
      registry: {}
      smartcard: {}
      tls: {}
    image: {}
    ingress:
      annotations: {}
      configureCertmanager: false
      enabled: true
      path: /
      pathType: Prefix
      provider: nginx
      tls: {}
    initialRootPassword: {}
    kas:
      enabled: false
      service:
        apiExternalPort: 8153
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.16.15
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
    minio:
      credentials: {}
      enabled: true
    oauth:
      gitlab-pages: {}
    operator:
      enabled: false
      rollout:
        autoPause: true
    pages:
      accessControl: false
      apiSecret: {}
      artifactsServer: true
      authSecret: {}
      enabled: false
      externalHttp: []
      externalHttps: []
      localStore:
        enabled: false
      objectStore:
        bucket: gitlab-pages
        connection: {}
        enabled: true
    pod:
      labels: {}
    praefect:
      authToken: {}
      autoMigrate: true
      dbSecret: {}
      enabled: false
      psql:
        sslMode: disable
      replaceInternalGitaly: true
      service:
        externalPort: 8075
        internalPort: 8075
        name: praefect
        tls:
          externalPort: 8076
          internalPort: 8076
        type: ClusterIP
      tls:
        enabled: false
      virtualStorages:
      - gitalyReplicas: 3
        maxUnavailable: 1
        name: default
    psql:
      password: {}
      ssl: {}
    rails:
      bootsnap:
        enabled: true
    railsSecrets: {}
    redis:
      password:
        enabled: true
    registry:
      bucket: registry
      certificate: {}
      httpSecret: {}
      notificationSecret: {}
      notifications:
        endpoints: []
    runner:
      registrationToken: {}
    service:
      annotations: {}
      labels: {}
    serviceAccount:
      annotations: {}
      create: true
      enabled: false
    shell:
      authToken: {}
      hostKeys: {}
      tcp:
        proxyProtocol: false
    smtp:
      address: smtp.mailgun.org
      authentication: plain
      enabled: false
      openssl_verify_mode: peer
      password:
        key: password
        secret: ""
      pool: false
      port: 2525
      starttls_auto: false
      user_name: ""
    time_zone: UTC
    tracing:
      connection:
        string: ""
      urlTemplate: ""
    webservice:
      workerTimeout: 60
    workhorse:
      serviceName: webservice-default
  health:
    storagedriver:
      enabled: false
      interval: 10s
      threshold: 3
  hpa:
    cpu:
      targetAverageUtilization: 75
    customMetrics: []
    maxReplicas: 10
    minReplicas: 2
  image:
    repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry
    tag: v3.15.0-gitlab
  ingress:
    annotations: {}
    proxyBodySize: "0"
    proxyBuffering: "off"
    proxyReadTimeout: 900
    tls: {}
  init:
    image: {}
    resources:
      requests:
        cpu: 50m
    script: |-
      if [ -e /config/accesskey ] ; then
        sed -e 's@ACCESS_KEY@'"$(cat /config/accesskey)"'@' -e 's@SECRET_KEY@'"$(cat /config/secretkey)"'@' /config/config.yml > /registry/config.yml
      else
        cp -v -r -L /config/config.yml  /registry/config.yml
      fi
      # Place the `http.secret` value from the kubernetes secret
      sed -i -e 's@HTTP_SECRET@'"$(cat /config/httpSecret)"'@' /registry/config.yml
      # Populate sensitive registry notification secrets in the config file
      if [ -d /config/notifications ]; then
        for i in /config/notifications/*; do
          filename=$(basename $i);
          sed -i -e 's@'"${filename}"'@'"$(cat $i)"'@' /registry/config.yml;
        done
      fi
      # Insert any provided `storage` block from kubernetes secret
      if [ -d /config/storage ]; then
        # Copy contents of storage secret(s)
        mkdir -p /registry/storage
        cp -v -r -L /config/storage/* /registry/storage/
        # Ensure there is a new line in the end
        echo '' >> /registry/storage/config
        # Default `delete.enabled: true` if not present.
        ## Note: busybox grep doesn't support multiline, so we chain `egrep`.
        if ! $(egrep -A1 '^delete:\s*$' /registry/storage/config | egrep -q '\s{2,4}enabled:') ; then
          echo 'delete:' >> /registry/storage/config
          echo '  enabled: true' >> /registry/storage/config
        fi
        # Indent /registry/storage/config 2 spaces before inserting into config.yml
        sed -i 's/^/  /' /registry/storage/config
        # Insert into /registry/config.yml after `storage:`
        sed -i '/storage:/ r /registry/storage/config' /registry/config.yml
        # Remove the now extraneous `config` file
        rm /registry/storage/config
      fi
      # Set to known path, to used ConfigMap
      cat /config/certificate.crt > /registry/certificate.crt
      # Copy the optional profiling keyfile to the expected location
      if [ -f /config/profiling-key.json ]; then
        cp /config/profiling-key.json /registry/profiling-key.json
      fi
      # Insert Database password, if enabled
      if [ -f /config/database_password ] ; then
        sed -i -e 's@DB_PASSWORD_FILE@'"$(cat /config/database_password)"'@' /registry/config.yml
      fi
      # Copy the database TLS connection files to the expected location and set permissions
      if [ -d /config/ssl ]; then
        cp -r /config/ssl/ /registry/ssl
        chmod 700 /registry/ssl
        chmod 600 /registry/ssl/*.pem
      fi
  log:
    fields:
      service: registry
    level: info
  maintenance:
    readonly:
      enabled: false
    uploadpurging:
      age: 168h
      dryrun: false
      enabled: true
      interval: 24h
  maxUnavailable: 1
  migration:
    disablemirrorfs: false
    enabled: false
  minio:
    redirect: false
  networkpolicy:
    annotations: {}
    egress:
      enabled: false
      rules: []
    enabled: false
    ingress:
      enabled: false
      rules: []
  nodeSelector: {}
  podLabels: {}
  profiling:
    stackdriver:
      credentials: {}
      enabled: false
  relativeurls: false
  reporting:
    sentry:
      enabled: false
  resources:
    requests:
      cpu: 50m
      memory: 32Mi
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  service:
    externalPort: 5000
    internalPort: 5000
    name: registry
    type: ClusterIP
  serviceAccount:
    create: false
  serviceLabels: {}
  storage: {}
  tokenIssuer: gitlab-issuer
  tokenService: container_registry
  tolerations: []
  validation:
    disabled: true
    manifests:
      referencelimit: 0
      urls:
        allow: []
        deny: []
shared-secrets:
  annotations: {}
  enabled: true
  env: production
  podLabels: {}
  rbac:
    create: true
  resources:
    requests:
      cpu: 50m
  securityContext:
    fsGroup: 65534
    runAsUser: 65534
  selfsign:
    caSubject: GitLab Helm Chart
    expiry: 3650d
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/cfssl-self-sign
      tag: 1.2
    keyAlgorithm: rsa
    keySize: "4096"
  serviceAccount:
    create: true
    enabled: true
    name: null
  tolerations: []
upgradeCheck:
  enabled: true
  image: {}
  resources:
    requests:
      cpu: 50m
  securityContext:
    fsGroup: 65534
    runAsUser: 65534
  tolerations: []
